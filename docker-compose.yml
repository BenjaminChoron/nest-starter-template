x-postgres-common: &postgres-common
  image: postgres:15-alpine
  restart: always
  healthcheck:
    test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
    interval: 10s
    timeout: 5s
    retries: 5
  deploy:
    resources:
      limits:
        memory: 1G
        cpus: '1'
      reservations:
        memory: 256M
  environment: &common-env
    POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
    TZ: UTC

services:
  database:
    <<: *postgres-common
    container_name: postgres_dev
    environment:
      <<: *common-env
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - '${DATABASE_PORT}:5432'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./src/database/init-scripts:/docker-entrypoint-initdb.d

  database-test:
    <<: *postgres-common
    container_name: postgres_test
    environment:
      <<: *common-env
      POSTGRES_USER: ${TEST_DATABASE_USER}
      POSTGRES_PASSWORD: ${TEST_DATABASE_PASSWORD}
      POSTGRES_DB: ${TEST_DATABASE_NAME}
    ports:
      - '${TEST_DATABASE_PORT}:5432'
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./src/database/init-scripts:/docker-entrypoint-initdb.d

  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

volumes:
  postgres_dev_data:
    name: postgres_dev_data
  postgres_test_data:
    name: postgres_test_data
  redis_data:
